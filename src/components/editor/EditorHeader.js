import React, { useState } from 'react';
import { Button } from '../ui';
import AddPostModal from './AddPostModal';

const EditorHeader = () => {
  const [isAddModalOpen, setIsAddModalOpen] = useState(false);

  const handleCreatePost = async (postData) => {
    try {
      console.log('Creating post with data:', postData);

      const response = await fetch('/wp-json/funculo/v1/posts', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'X-WP-Nonce': window.wpApiSettings.nonce
        },
        body: JSON.stringify({
          title: postData.title,
          status: 'publish',
          taxonomy_term: postData.type
        })
      });

      if (response.ok) {
        const newPost = await response.json();
        console.log('Post created successfully:', newPost);
        // Optionally refresh the post list or add to state
      } else {
        console.error('Failed to create post:', response.statusText);
      }
    } catch (error) {
      console.error('Error creating post:', error);
    }
  };
  return (
    <header id="editor-header" className='h-fit border-b border-solid border-outline flex items-center justify-between'>
      <div className='flex gap-4 items-center'>
        <div className=' bg-contrast text-base p-3 w-fit'>
          <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M22.6667 8.41999C22.5334 8.41999 22.4 8.44666 22.2667 8.45999C22.08 7.73999 21.5734 7.09999 20.8134 6.69999C20.3067 6.43332 18.8667 5.88666 16.7734 6.75332C17.2 5.31332 16.52 4.17999 15.5334 3.64666C14.2267 2.92666 12.3067 3.11332 11.5334 4.51332C11.5334 4.52666 11.52 4.53999 11.5067 4.55332C10.9334 4.04666 10.16 3.79332 9.36004 3.91332C8.20004 4.08666 7.25338 4.93999 6.77338 6.27332L6.70671 6.44666C6.32004 7.49999 5.88004 8.73999 5.65338 10.1933C5.17338 9.61999 4.62671 9.24666 4.02671 9.31332C2.48004 9.44666 2.33338 11.78 2.26671 12.66C1.92004 18.0333 5.56004 26.4333 7.94671 28.6733C9.89338 30.4867 12.4534 31.4467 15.12 31.4467C16.3334 31.4467 17.56 31.2467 18.76 30.8467C22.96 29.42 25.88 25.6467 26.2 21.22C26.2534 20.2467 26.72 11.62 24.4 9.19332C23.92 8.68666 23.3334 8.44666 22.68 8.41999H22.6667ZM20.1334 12.42C20.2534 13.42 20.04 14.5133 19.9067 15.02C19.44 15.18 18.6934 15.46 17.8667 15.8467C17.44 13.8733 17.9867 12.54 18.68 12.2733L19.12 12.1133C19.44 11.9933 19.7734 11.8733 20.1067 11.74C20.1067 11.9667 20.1067 12.18 20.1467 12.42H20.1334ZM24.32 21.1C24.0534 24.7667 21.6267 27.9 18.1467 29.0867C14.9467 30.1667 11.5334 29.4867 9.21338 27.3267C7.34671 25.58 3.80004 17.74 4.12004 12.7933C4.16004 12.14 4.24004 11.7267 4.30671 11.46C4.80004 12.1 5.54671 13.6333 5.98671 15.4333C5.98671 15.46 7.42671 19.14 8.94671 21.2867C9.13338 21.54 9.41338 21.6733 9.70671 21.6733C9.89338 21.6733 10.08 21.62 10.2534 21.5C10.6667 21.2067 10.7734 20.62 10.4667 20.1933C5.97338 13.86 7.40004 9.95332 8.45338 7.08666L8.52004 6.91332C8.77338 6.23332 9.16004 5.83332 9.62671 5.75332C9.92004 5.71332 10.2134 5.81999 10.3734 6.03332C10.5067 6.21999 10.5067 6.43332 10.44 6.67332C10.4134 6.75332 10.0934 7.81999 10.0934 7.84666C8.92004 12.06 9.41338 15.5267 11.04 18.6733C11.28 19.1267 11.84 19.3133 12.2934 19.0733C12.7467 18.8333 12.9334 18.2733 12.6934 17.82C11.2667 15.06 10.84 11.9933 11.8934 8.27332C12.2267 7.00666 12.5734 6.41999 12.8934 5.85999C12.9867 5.71332 13.0667 5.56666 13.1467 5.40666C13.3467 5.05999 14.0934 4.99332 14.6134 5.27332C14.8134 5.37999 15.32 5.65999 14.8 6.61999C14.3334 7.45999 13.9334 8.24666 13.5867 8.99332C12.52 11.38 12.1867 13.4733 13.36 16.3667C13.5067 16.7267 13.8534 16.9533 14.2267 16.9533C14.3467 16.9533 14.4667 16.9267 14.5734 16.8867C15.0534 16.6867 15.28 16.1533 15.0934 15.6733C14.28 13.66 14.3334 12.18 15.04 10.38C15.1467 10.1 15.3334 9.84666 15.5734 9.64666C17.5334 8.04666 19.0934 7.89999 19.9334 8.32666C20.36 8.55332 20.5067 8.87332 20.48 9.09999C20.4134 9.60666 19.64 9.91332 18.4667 10.34L18.0134 10.5133C16.3734 11.14 15.2667 13.5133 16.1867 16.7933C15.04 17.5667 13.9467 18.6067 13.3334 20.02C12.56 21.7933 12.68 23.82 13.6667 26.0467C13.88 26.5133 14.4267 26.7267 14.8934 26.5133C15.36 26.3 15.5734 25.7533 15.36 25.2867C14.5867 23.5667 14.48 22.0467 15.0267 20.7667C16.1067 18.2733 19.4667 17.1267 20.5734 16.74C21.1067 16.5533 21.5067 16.1133 21.6534 15.5667C21.8267 14.8733 22.1067 13.5133 21.9467 12.18C21.8134 11.02 22.0534 10.58 22.1867 10.46C22.48 10.18 22.8267 10.2733 23 10.46C24.32 11.8467 24.4934 17.7267 24.28 21.0867L24.32 21.1Z" fill="currentColor"/>
            <path d="M21.3735 6.19333C21.4535 6.21999 21.5335 6.21999 21.6001 6.21999C22.0135 6.21999 22.4001 5.93999 22.5068 5.51333L23.2935 2.47333C23.4268 1.97999 23.1201 1.45999 22.6268 1.33999C22.1335 1.20666 21.6135 1.51333 21.4935 2.00666L20.7068 5.04666C20.5735 5.53999 20.8801 6.05999 21.3735 6.17999V6.19333Z" fill="currentColor"/>
            <path d="M23.1467 7.07332C23.3201 7.19332 23.5067 7.25999 23.7067 7.25999C23.9867 7.25999 24.2667 7.12665 24.4534 6.88665L27.1201 3.31332C27.4267 2.89999 27.3467 2.31332 26.9334 2.00665C26.5201 1.69999 25.9334 1.77999 25.6267 2.19332L22.9601 5.76665C22.6534 6.17999 22.7334 6.76665 23.1467 7.07332Z" fill="currentColor"/>
            <path d="M29.1467 6.01999C28.9201 5.55333 28.3601 5.37999 27.8934 5.60666L24.9334 7.08666C24.4667 7.31333 24.2801 7.87333 24.5201 8.33999C24.6801 8.67333 25.0134 8.85999 25.3601 8.85999C25.4934 8.85999 25.6401 8.83333 25.7734 8.76666L28.7334 7.28666C29.2001 7.05999 29.3867 6.49999 29.1467 6.03333V6.01999Z" fill="currentColor"/>
          </svg>
        </div>

        <Button
          variant="secondary"
          onClick={() => setIsAddModalOpen(true)}
        >
          Add new
        </Button>
      </div>
      <div className='flex gap-4 justify-center mr-4'>
        <Button variant="secondary">Save</Button>
      </div>

      <AddPostModal
        isOpen={isAddModalOpen}
        onClose={() => setIsAddModalOpen(false)}
        onCreate={handleCreatePost}
      />
    </header>
  );
};

export default EditorHeader;
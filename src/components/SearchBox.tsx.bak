import React, { useState, useEffect } from 'react'

interface SearchBoxProps {
  value: string
  onSearch: (query: string) => void
  placeholder?: string
}

const SearchBox: React.FC<SearchBoxProps> = ({
  value,
  onSearch,
  placeholder = "Search...",
}) => {
  const [searchValue, setSearchValue] = useState(value)

  // Debounce search to avoid too many API calls
  useEffect(() => {
    const timer = setTimeout(() => {
      onSearch(searchValue)
    }, 300)

    return () => clearTimeout(timer)
  }, [searchValue, onSearch])

  // Sync with external value changes
  useEffect(() => {
    setSearchValue(value)
  }, [value])

  const handleClear = () => {
    setSearchValue('')
  }

  return (
    <div className="search-box">
      <div className="search-input-container">
        <span className="search-icon">🔍</span>
        <input
          type="text"
          value={searchValue}
          onChange={(e) => setSearchValue(e.target.value)}
          placeholder={placeholder}
          className="search-input"
        />
        {searchValue && (
          <button
            onClick={handleClear}
            className="search-clear"
            title="Clear search"
          >
            ×
          </button>
        )}
      </div>
    </div>
  )
}

export default SearchBox
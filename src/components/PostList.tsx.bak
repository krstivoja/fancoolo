import React from 'react'

interface Post {
  id: number
  title: string
  slug: string
  status: string
  date: string
  modified: string
  excerpt: string
  terms: Array<{
    id: number
    slug: string
    name: string
  }>
  edit_url: string
  meta: any
}

interface PostListProps {
  posts: Post[]
  getTermBadgeClass: (termSlug: string) => string
}

const PostList: React.FC<PostListProps> = ({ posts, getTermBadgeClass }) => {
  const formatDate = (dateString: string) => {
    const date = new Date(dateString)
    return date.toLocaleDateString('en-US', {
      year: 'numeric',
      month: 'short',
      day: 'numeric',
    })
  }

  const getStatusIcon = (status: string) => {
    switch (status) {
      case 'publish':
        return '‚úÖ'
      case 'draft':
        return 'üìù'
      case 'private':
        return 'üîí'
      default:
        return 'üìÑ'
    }
  }

  const hasMetaContent = (post: Post) => {
    if (!post.meta) return false

    return Object.values(post.meta).some((typeData: any) => {
      if (typeof typeData === 'object') {
        return Object.values(typeData).some((content: any) =>
          content && content.toString().trim().length > 0
        )
      }
      return false
    })
  }

  if (posts.length === 0) {
    return (
      <div className="empty-state">
        <div className="empty-icon">üì≠</div>
        <h4>No components found</h4>
        <p>Try adjusting your search or filter criteria.</p>
      </div>
    )
  }

  return (
    <div className="post-list">
      {posts.map((post) => (
        <div key={post.id} className={`post-item ${post.status}`}>
          <div className="post-header">
            <h4 className="post-title">
              <span className="status-icon">{getStatusIcon(post.status)}</span>
              {post.title || 'Untitled'}
            </h4>

            <div className="post-actions">
              <a
                href={post.edit_url}
                className="edit-link"
                title="Edit component"
                target="_blank"
                rel="noopener noreferrer"
              >
                ‚úèÔ∏è
              </a>
            </div>
          </div>

          <div className="post-meta">
            <div className="post-terms">
              {post.terms.map((term) => (
                <span key={term.id} className={getTermBadgeClass(term.slug)}>
                  {term.name}
                </span>
              ))}
            </div>

            <div className="post-dates">
              <span className="post-date" title={`Created: ${post.date}`}>
                üìÖ {formatDate(post.date)}
              </span>
              {post.date !== post.modified && (
                <span className="post-modified" title={`Modified: ${post.modified}`}>
                  ‚úèÔ∏è {formatDate(post.modified)}
                </span>
              )}
            </div>
          </div>

          {post.excerpt && (
            <div className="post-excerpt">
              {post.excerpt}
            </div>
          )}

          <div className="post-indicators">
            {hasMetaContent(post) && (
              <span className="has-content-indicator" title="Has component code">
                üíæ Has Code
              </span>
            )}

            <span className="post-status" title={`Status: ${post.status}`}>
              {post.status}
            </span>
          </div>

          {/* Code preview for blocks */}
          {post.meta?.blocks && (
            <div className="code-preview">
              <div className="code-indicators">
                {post.meta.blocks.php && (
                  <span className="code-type php" title="Has PHP code">PHP</span>
                )}
                {post.meta.blocks.scss && (
                  <span className="code-type scss" title="Has SCSS code">SCSS</span>
                )}
                {post.meta.blocks.js && (
                  <span className="code-type js" title="Has JavaScript code">JS</span>
                )}
                {post.meta.blocks.attributes && (
                  <span className="code-type json" title="Has attributes">ATTR</span>
                )}
                {post.meta.blocks.settings && (
                  <span className="code-type json" title="Has settings">SET</span>
                )}
              </div>
            </div>
          )}

          {/* Code preview for symbols */}
          {post.meta?.symbols && post.meta.symbols.php && (
            <div className="code-preview">
              <div className="code-indicators">
                <span className="code-type php" title="Has PHP code">PHP</span>
              </div>
            </div>
          )}

          {/* Code preview for SCSS partials */}
          {post.meta?.scss_partials && post.meta.scss_partials.scss && (
            <div className="code-preview">
              <div className="code-indicators">
                <span className="code-type scss" title="Has SCSS code">SCSS</span>
              </div>
            </div>
          )}
        </div>
      ))}
    </div>
  )
}

export default PostList